#!/usr/bin/env perl
use strict;
use warnings;
use Mail::IMAPClient;
use Getopt::Long;

# list of supported commands
my %commands = (
    'list-folders' => sub {
        my ($imap) = @_;
        print "$_\n" for sort @{ $imap->folders };
    },
    'create-folders' => sub {
        my ( $imap, @folders ) = @_;
        for my $folder (@folders) {
            $imap->create($folder)
              or die "Create '$folder' error: ", $imap->LastError, "\n";
            print "$folder created\n";
        }
    },
);

# command auto-completion
sub get_command {
    my ($cmd) = @_;
    die "No command given\n" if ! defined $cmd;

    if ( my @matches = grep { /^$cmd/ } sort keys %commands ) {
        die "Ambiguous command <$cmd>.\nDid you mean one of these?\n"
          . "  @matches\n"
          if @matches > 1;
        return shift @matches;
    }
    else { die "Unknown command <$cmd>\n"; }
}

# command-line options
GetOptions(
    \my %option,    # these are all arguments to Mail::IMAPClient->new()
    'Server|server|host=s', 'Port|port=s',            # connection
    'User=s',               'Password|password=s',    # credentials
    'Debug|debug',
    'Ssl|ssl',
);

# guess the command
my $cmd = get_command(shift);

$commands{$cmd}->( Mail::IMAPClient->new(%option), @ARGV );
